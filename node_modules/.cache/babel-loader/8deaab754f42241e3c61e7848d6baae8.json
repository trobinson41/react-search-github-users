{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-projects\\\\starter-project-react-github-search-users-master\\\\src\\\\context\\\\context.js\";\nimport React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\nconst rootUrl = \"https://api.github.com\";\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({\n  children\n}) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  const [requests, setRequests] = useState(0);\n  const [loading, setIsLoading] = useState(false);\n\n  const checkRequests = () => {\n    axios(`${rootUrl}/rate_limit`).then(({\n      data\n    }) => {\n      let {\n        rate: {\n          remaining\n        }\n      } = data;\n      setRequests(remaining);\n\n      if (remaining === 0) {// throw an error\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(checkRequests, []);\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      githubUser,\n      repos,\n      followers\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { GithubProvider, GithubContext };","map":{"version":3,"sources":["D:/React/react-projects/starter-project-react-github-search-users-master/src/context/context.js"],"names":["React","useState","useEffect","mockUser","mockRepos","mockFollowers","axios","rootUrl","GithubContext","createContext","GithubProvider","children","githubUser","setGithubUser","repos","setRepos","followers","setFollowers","requests","setRequests","loading","setIsLoading","checkRequests","then","data","rate","remaining","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,MAAMC,aAAa,GAAGR,KAAK,CAACS,aAAN,EAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACE,QAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACG,SAAD,CAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACI,aAAD,CAA1C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACmB,OAAD,EAAUC,YAAV,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMqB,aAAa,GAAG,MAAM;AAC1BhB,IAAAA,KAAK,CAAE,GAAEC,OAAQ,aAAZ,CAAL,CACGgB,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB,UAAI;AACFC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AADJ,UAEAF,IAFJ;AAGAL,MAAAA,WAAW,CAACO,SAAD,CAAX;;AACA,UAAIA,SAAS,KAAK,CAAlB,EAAqB,CACnB;AACD;AACF,KATH,EAUGC,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZD;;AAaA1B,EAAAA,SAAS,CAACoB,aAAD,EAAgB,EAAhB,CAAT;AACA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEV,MAAAA,UAAF;AAAcE,MAAAA,KAAd;AAAqBE,MAAAA;AAArB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD,CAzBD;;AA2BA,SAASD,cAAT,EAAyBF,aAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\n\nconst rootUrl = \"https://api.github.com\";\n\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({ children }) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  const [requests, setRequests] = useState(0);\n  const [loading, setIsLoading] = useState(false);\n  const checkRequests = () => {\n    axios(`${rootUrl}/rate_limit`)\n      .then(({ data }) => {\n        let {\n          rate: { remaining },\n        } = data;\n        setRequests(remaining);\n        if (remaining === 0) {\n          // throw an error\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(checkRequests, []);\n  return (\n    <GithubContext.Provider value={{ githubUser, repos, followers }}>\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport { GithubProvider, GithubContext };\n"]},"metadata":{},"sourceType":"module"}