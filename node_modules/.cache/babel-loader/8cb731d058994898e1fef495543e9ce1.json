{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-projects\\\\starter-project-react-github-search-users-master\\\\src\\\\components\\\\Repos.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\n\nconst Repos = () => {\n  const {\n    repos\n  } = React.useContext(GithubContext);\n  const languages = repos.reduce((total, item) => {\n    const {\n      language,\n      stargazers_count\n    } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = {\n        label: language,\n        value: 1,\n        stars: stargazers_count\n      };\n    } else {\n      total[language] = { ...total[language],\n        value: total[language].value + 1,\n        stars: total[language].stars + stargazers_count\n      };\n    }\n\n    return total;\n  }, {});\n  const mostUsed = Object.values(languages).sort((a, b) => {\n    return b.value - a.value;\n  }).slice(0, 5);\n  const mostPopular = Object.values(languages).sort((a, b) => {\n    return b.stars - a.stars;\n  }).map(item => {\n    return { ...item,\n      value: item.stars\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: mostUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Doughnut2D, {\n    data: mostPopular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["D:/React/react-projects/starter-project-react-github-search-users-master/src/components/Repos.js"],"names":["React","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","useContext","languages","reduce","total","item","language","stargazers_count","label","value","stars","mostUsed","Object","values","sort","a","b","slice","mostPopular","map","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,UAAjE;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,KAAK,CAACU,UAAN,CAAiBR,aAAjB,CAAlB;AACA,QAAMS,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC9C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAiCF,IAAvC;AACA,QAAI,CAACC,QAAL,EAAe,OAAOF,KAAP;;AACf,QAAI,CAACA,KAAK,CAACE,QAAD,CAAV,EAAsB;AACpBF,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB;AAAEE,QAAAA,KAAK,EAAEF,QAAT;AAAmBG,QAAAA,KAAK,EAAE,CAA1B;AAA6BC,QAAAA,KAAK,EAAEH;AAApC,OAAlB;AACD,KAFD,MAEO;AACLH,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB,EAChB,GAAGF,KAAK,CAACE,QAAD,CADQ;AAEhBG,QAAAA,KAAK,EAAEL,KAAK,CAACE,QAAD,CAAL,CAAgBG,KAAhB,GAAwB,CAFf;AAGhBC,QAAAA,KAAK,EAAEN,KAAK,CAACE,QAAD,CAAL,CAAgBI,KAAhB,GAAwBH;AAHf,OAAlB;AAKD;;AACD,WAAOH,KAAP;AACD,GAbiB,EAaf,EAbe,CAAlB;AAeA,QAAMO,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcX,SAAd,EACdY,IADc,CACT,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,WAAOA,CAAC,CAACP,KAAF,GAAUM,CAAC,CAACN,KAAnB;AACD,GAHc,EAIdQ,KAJc,CAIR,CAJQ,EAIL,CAJK,CAAjB;AAMA,QAAMC,WAAW,GAAGN,MAAM,CAACC,MAAP,CAAcX,SAAd,EACjBY,IADiB,CACZ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,WAAOA,CAAC,CAACN,KAAF,GAAUK,CAAC,CAACL,KAAnB;AACD,GAHiB,EAIjBS,GAJiB,CAIZd,IAAD,IAAU;AACb,WAAO,EAAE,GAAGA,IAAL;AAAWI,MAAAA,KAAK,EAAEJ,IAAI,CAACK;AAAvB,KAAP;AACD,GANiB,CAApB;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEO,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD,CAxCD;;AA0CA,MAAME,OAAO,GAAG5B,MAAM,CAAC6B,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAwBA,eAAetB,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n  const languages = repos.reduce((total, item) => {\n    const { language, stargazers_count } = item;\n    if (!language) return total;\n    if (!total[language]) {\n      total[language] = { label: language, value: 1, stars: stargazers_count };\n    } else {\n      total[language] = {\n        ...total[language],\n        value: total[language].value + 1,\n        stars: total[language].stars + stargazers_count,\n      };\n    }\n    return total;\n  }, {});\n\n  const mostUsed = Object.values(languages)\n    .sort((a, b) => {\n      return b.value - a.value;\n    })\n    .slice(0, 5);\n\n  const mostPopular = Object.values(languages)\n    .sort((a, b) => {\n      return b.stars - a.stars;\n    })\n    .map((item) => {\n      return { ...item, value: item.stars };\n    });\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        <Pie3D data={mostUsed} />\n        <div></div>\n        <Doughnut2D data={mostPopular} />\n        <div></div>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}