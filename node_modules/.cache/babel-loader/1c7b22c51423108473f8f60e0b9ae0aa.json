{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-projects\\\\starter-project-react-github-search-users-master\\\\src\\\\components\\\\Repos.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\n\nconst Repos = () => {\n  const {\n    repos\n  } = React.useContext(GithubContext);\n  let languages = repos.reduce((total, item) => {\n    const {\n      language\n    } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = {\n        label: language,\n        value: 1\n      };\n    } else {\n      total[language].value = total[language].value + 1;\n    }\n\n    return total;\n  }, {});\n  languages = Object.values(languages).sort((a, b) => {\n    return b.value - a.value;\n  }).slice(0, 5);\n  console.log(languages);\n  const chartData = [{\n    label: \"HTML\",\n    value: \"13\"\n  }, {\n    label: \"CSS\",\n    value: \"160\"\n  }, {\n    label: \"JavaScript\",\n    value: \"80\"\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie3D, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["D:/React/react-projects/starter-project-react-github-search-users-master/src/components/Repos.js"],"names":["React","styled","GithubContext","ExampleChart","Pie3D","Column3D","Bar3D","Doughnut2D","Repos","repos","useContext","languages","reduce","total","item","language","label","value","Object","values","sort","a","b","slice","console","log","chartData","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,UAAjE;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,KAAK,CAACU,UAAN,CAAiBR,aAAjB,CAAlB;AACA,MAAIS,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAeD,IAArB;AACA,QAAI,CAACC,QAAL,EAAe,OAAOF,KAAP;;AACf,QAAI,CAACA,KAAK,CAACE,QAAD,CAAV,EAAsB;AACpBF,MAAAA,KAAK,CAACE,QAAD,CAAL,GAAkB;AAAEC,QAAAA,KAAK,EAAED,QAAT;AAAmBE,QAAAA,KAAK,EAAE;AAA1B,OAAlB;AACD,KAFD,MAEO;AACLJ,MAAAA,KAAK,CAACE,QAAD,CAAL,CAAgBE,KAAhB,GAAwBJ,KAAK,CAACE,QAAD,CAAL,CAAgBE,KAAhB,GAAwB,CAAhD;AACD;;AACD,WAAOJ,KAAP;AACD,GATe,EASb,EATa,CAAhB;AAUAF,EAAAA,SAAS,GAAGO,MAAM,CAACC,MAAP,CAAcR,SAAd,EACTS,IADS,CACJ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,WAAOA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAAnB;AACD,GAHS,EAITM,KAJS,CAIH,CAJG,EAIA,CAJA,CAAZ;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACA,QAAMe,SAAS,GAAG,CAChB;AACEV,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADgB,EAKhB;AACED,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALgB,EAShB;AACED,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATgB,CAAlB;AAeA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAES,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAzCD;;AA2CA,MAAMC,OAAO,GAAG1B,MAAM,CAAC2B,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAwBA,eAAepB,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { GithubContext } from \"../context/context\";\nimport { ExampleChart, Pie3D, Column3D, Bar3D, Doughnut2D } from \"./Charts\";\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n  let languages = repos.reduce((total, item) => {\n    const { language } = item;\n    if (!language) return total;\n    if (!total[language]) {\n      total[language] = { label: language, value: 1 };\n    } else {\n      total[language].value = total[language].value + 1;\n    }\n    return total;\n  }, {});\n  languages = Object.values(languages)\n    .sort((a, b) => {\n      return b.value - a.value;\n    })\n    .slice(0, 5);\n  console.log(languages);\n  const chartData = [\n    {\n      label: \"HTML\",\n      value: \"13\",\n    },\n    {\n      label: \"CSS\",\n      value: \"160\",\n    },\n    {\n      label: \"JavaScript\",\n      value: \"80\",\n    },\n  ];\n\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        {/* <ExampleChart data={chartData} /> */}\n        <Pie3D data={chartData} />\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}